"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectSpread3 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _get2 = _interopRequireDefault(require("lodash/get"));

var _set2 = _interopRequireDefault(require("lodash/set"));

var _Association2 = _interopRequireDefault(require("./Association"));

var HasOne =
/*#__PURE__*/
function (_Association) {
  (0, _inherits2.default)(HasOne, _Association);

  function HasOne() {
    (0, _classCallCheck2.default)(this, HasOne);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HasOne).apply(this, arguments));
  }

  (0, _createClass2.default)(HasOne, [{
    key: "set",
    value: function set(doc) {
      if (doc && doc._type !== this.doctype) {
        throw new Error("Tried to associate a ".concat(doc._type, " document to a HasOne relationship on ").concat(this.doctype, " document"));
      }

      var path = "relationships[".concat(this.name, "].data");

      if (doc) {
        (0, _set2.default)(this.target, path, {
          _id: doc._id,
          _type: doc._type
        });
      } else {
        (0, _set2.default)(this.target, path, undefined);
      }
    }
  }, {
    key: "unset",
    value: function unset() {
      this.set(undefined);
    }
  }, {
    key: "dehydrate",
    value: function dehydrate(doc) {
      if (!this.raw) {
        return doc;
      }

      return (0, _objectSpread3.default)({}, doc, {
        relationships: (0, _objectSpread3.default)({}, doc.relationships, (0, _defineProperty2.default)({}, this.name, {
          data: this.raw
        }))
      });
    }
  }, {
    key: "raw",
    get: function get() {
      return (0, _get2.default)(this.target, "relationships[".concat(this.name, "].data"), null);
    }
  }, {
    key: "data",
    get: function get() {
      if (!this.raw) {
        return null;
      }

      return this.get(this.doctype, this.raw._id);
    }
  }], [{
    key: "query",
    value: function query(doc, client, assoc) {
      var relationship = (0, _get2.default)(doc, "relationships.".concat(assoc.name, ".data"), {});

      if (!relationship || !relationship._id) {
        return null;
      }

      return client.get(assoc.doctype, relationship._id);
    }
  }]);
  return HasOne;
}(_Association2.default);

exports.default = HasOne;