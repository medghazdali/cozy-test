"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.CONTACTS_DOCTYPE = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _DocumentCollection2 = _interopRequireWildcard(require("./DocumentCollection"));

var normalizeMyselfResp = function normalizeMyselfResp(resp) {
  return (0, _objectSpread2.default)({}, (0, _DocumentCollection2.normalizeDoc)(resp.data, CONTACTS_DOCTYPE), resp.data.attributes, {
    _rev: resp.data.meta.rev
  });
};

var ContactsCollection =
/*#__PURE__*/
function (_DocumentCollection) {
  (0, _inherits2.default)(ContactsCollection, _DocumentCollection);

  function ContactsCollection() {
    (0, _classCallCheck2.default)(this, ContactsCollection);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ContactsCollection).apply(this, arguments));
  }

  (0, _createClass2.default)(ContactsCollection, [{
    key: "find",
    value: function () {
      var _find = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee(selector, options) {
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(Object.values(selector).length === 1 && selector['me'] == true)) {
                  _context.next = 4;
                  break;
                }

                return _context.abrupt("return", this.findMyself());

              case 4:
                return _context.abrupt("return", (0, _get2.default)((0, _getPrototypeOf2.default)(ContactsCollection.prototype), "find", this).call(this, selector, options));

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      return function find(_x, _x2) {
        return _find.apply(this, arguments);
      };
    }()
  }, {
    key: "findMyself",
    value: function () {
      var _findMyself = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee2() {
        var resp, col;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.stackClient.fetchJSON('POST', '/contacts/myself');

              case 2:
                resp = _context2.sent;
                col = {
                  data: [normalizeMyselfResp(resp)],
                  next: false,
                  meta: null,
                  bookmark: false
                };
                return _context2.abrupt("return", col);

              case 5:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      return function findMyself() {
        return _findMyself.apply(this, arguments);
      };
    }()
  }]);
  return ContactsCollection;
}(_DocumentCollection2.default);

var CONTACTS_DOCTYPE = 'io.cozy.contacts';
exports.CONTACTS_DOCTYPE = CONTACTS_DOCTYPE;
var _default = ContactsCollection;
exports.default = _default;