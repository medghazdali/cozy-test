"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.SETTINGS_DOCTYPE = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _DocumentCollection2 = _interopRequireDefault(require("./DocumentCollection"));

var SETTINGS_DOCTYPE = 'io.cozy.settings';
/**
 * Implements `DocumentCollection` API to interact with the /settings endpoint of the stack
 */

exports.SETTINGS_DOCTYPE = SETTINGS_DOCTYPE;

var SettingsCollection =
/*#__PURE__*/
function (_DocumentCollection) {
  (0, _inherits2.default)(SettingsCollection, _DocumentCollection);

  function SettingsCollection(stackClient) {
    (0, _classCallCheck2.default)(this, SettingsCollection);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(SettingsCollection).call(this, SETTINGS_DOCTYPE, stackClient));
  }
  /**
   * async get - Calls a route on the /settings API
   *
   * @param  {string} path The setting route to call, eg `instance` or `context`
   * @returns {object} The response from the route
   */


  (0, _createClass2.default)(SettingsCollection, [{
    key: "get",
    value: function () {
      var _get = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee(path) {
        var resp;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.stackClient.fetchJSON('GET', "/settings/".concat(path));

              case 2:
                resp = _context.sent;
                return _context.abrupt("return", {
                  data: _DocumentCollection2.default.normalizeDoctypeJsonApi(SETTINGS_DOCTYPE)((0, _objectSpread2.default)({
                    id: "/settings/".concat(path)
                  }, resp.data), resp)
                });

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      return function get(_x) {
        return _get.apply(this, arguments);
      };
    }()
  }]);
  return SettingsCollection;
}(_DocumentCollection2.default);

SettingsCollection.normalizeDoctype = _DocumentCollection2.default.normalizeDoctypeJsonApi;
var _default = SettingsCollection;
exports.default = _default;