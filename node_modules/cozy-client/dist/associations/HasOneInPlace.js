"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BelongsToInPlace = exports.default = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectSpread3 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _Association2 = _interopRequireDefault(require("./Association"));

/**
 * Here the id of the document is directly set in the attribute
 * of the document, not in the relationships attribute
 */
var HasOneInPlace =
/*#__PURE__*/
function (_Association) {
  (0, _inherits2.default)(HasOneInPlace, _Association);

  function HasOneInPlace() {
    (0, _classCallCheck2.default)(this, HasOneInPlace);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(HasOneInPlace).apply(this, arguments));
  }

  (0, _createClass2.default)(HasOneInPlace, [{
    key: "dehydrate",
    value: function dehydrate(doc) {
      return (0, _objectSpread3.default)({}, doc, (0, _defineProperty2.default)({}, this.name, this.raw || undefined));
    }
  }, {
    key: "raw",
    get: function get() {
      return this.target[this.name];
    }
  }, {
    key: "data",
    get: function get() {
      return this.get(this.doctype, this.raw);
    }
  }], [{
    key: "query",
    value: function query(doc, client, assoc) {
      var id = doc[assoc.name];
      return client.getDocumentFromState(assoc.doctype, id) || client.get(assoc.doctype, id);
    }
  }]);
  return HasOneInPlace;
}(_Association2.default);

exports.default = HasOneInPlace;
var BelongsToInPlace = HasOneInPlace;
exports.BelongsToInPlace = BelongsToInPlace;