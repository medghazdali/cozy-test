"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setContractSyncStatusInAccount = exports.getContractSyncStatusFromAccount = exports.muteError = exports.getMutedErrors = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _get = _interopRequireDefault(require("lodash/get"));

var _merge = _interopRequireDefault(require("lodash/merge"));

var _HasMany = require("../associations/HasMany");

var getMutedErrors = function getMutedErrors(account) {
  return (0, _get.default)(account, 'mutedErrors', []);
};
/**
 * muteError - Adds an error to the list of muted errors for the given account
 *
 * @param {CozyAccount} account   io.cozy.accounts
 * @param {string} errorType The type of the error to mute
 *
 * @returns {CozyAccount} An updated io.cozy.accounts
 */


exports.getMutedErrors = getMutedErrors;

var muteError = function muteError(account, errorType) {
  var mutedErrors = getMutedErrors(account);
  mutedErrors.push({
    type: errorType,
    mutedAt: new Date().toISOString()
  });
  return (0, _objectSpread2.default)({}, account, {
    mutedErrors: mutedErrors
  });
};

exports.muteError = muteError;
var DEFAULT_CONTRACT_SYNC_STATUS = true;
/**
 * Returns whether a contract is synced from account relationship
 *
 * @param  {CozyAccount} account - Cozy account
 */

var getContractSyncStatusFromAccount = function getContractSyncStatusFromAccount(account, contractId) {
  var relItem = (0, _HasMany.getHasManyItem)(account, 'contracts', contractId);

  if (!relItem) {
    throw new Error("Cannot find contrat ".concat(contractId, " in account"));
  }

  return (0, _get.default)(relItem, 'metadata.imported', DEFAULT_CONTRACT_SYNC_STATUS);
};
/**
 * Sets contract sync status into account relationship
 *
 * @param  {CozyAccount} account - Cozy account
 */


exports.getContractSyncStatusFromAccount = getContractSyncStatusFromAccount;

var setContractSyncStatusInAccount = function setContractSyncStatusInAccount(account, contractId, syncStatus) {
  return (0, _HasMany.updateHasManyItem)(account, 'contracts', contractId, function (contractRel) {
    if (contractRel === undefined) {
      throw new Error("Cannot find contrat ".concat(contractId, " in account"));
    }

    return (0, _merge.default)({}, contractRel, {
      metadata: {
        imported: syncStatus
      }
    });
  });
};

exports.setContractSyncStatusInAccount = setContractSyncStatusInAccount;