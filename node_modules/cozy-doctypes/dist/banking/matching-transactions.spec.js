"use strict";

var fs = require('fs-extra');

var path = require('path');

var sortBy = require('lodash/sortBy');

var _require = require('./matching-transactions'),
    matchTransactions = _require.matchTransactions,
    scoreMatching = _require.scoreMatching;

var DOCTYPE_OPERATIONS = 'io.cozy.bank.operations';

var readOperations = function readOperations(filename) {
  return fs.readJSONSync(filename)[DOCTYPE_OPERATIONS];
};

var getDisplayDate = function getDisplayDate(result) {
  var date = result.transaction.date.substr(0, 10);
  return date;
};

var fmtMatchResult = function fmtMatchResult(result) {
  var displayDate = getDisplayDate(result);

  if (result.match) {
    return "\u2705 ".concat(displayDate, ": ").concat(result.transaction.label, " (").concat(result.transaction.amount, ") -> ").concat(result.match.label, " (").concat(result.match.amount, ") via ").concat(result.method);
  } else {
    return "\u274C ".concat(displayDate, ": ").concat(result.transaction.label, " ").concat(result.transaction.amount);
  }
};

var matchFiles = function matchFiles(filename1, filename2) {
  return matchTransactions(readOperations(filename1), readOperations(filename2));
};

var fixturePath = path.join(__dirname, 'fixtures');
var fnDescribe = fs.existsSync(fixturePath) ? describe : xdescribe;
fnDescribe('transactions matching', function () {
  var _loop = function _loop() {
    var bank = _arr[_i];
    it("should match snapshots for ".concat(bank), function () {
      var results = matchFiles(path.join(fixturePath, "".concat(bank, "-transactions.bi.json")), path.join(fixturePath, "".concat(bank, "-transactions.linxo.json")));
      var fmtedResults = sortBy(Array.from(results), getDisplayDate).map(fmtMatchResult);
      expect(fmtedResults).toMatchSnapshot();
    });
  };

  for (var _i = 0, _arr = ['axa', 'banquepostale', 'creditagricole', 'banquepopulaire', 'fortuneo']; _i < _arr.length; _i++) {
    _loop();
  }
});
it('should score', function () {
  var newTr = {
    amount: -85,
    date: '2018-09-22T12:00:00.000Z',
    label: 'Web Sylvain Miserenne G',
    originalBankLabel: 'Virement Web Sylvain Miserenne Courses G Courses Gard 24/09/2018'
  };
  var existingTr = {
    amount: -85,
    date: '2018-09-22T00:00:00+02:00',
    label: 'Sylvain Miserenne Courses Gard 22/09/2018',
    linxoId: '1209279242',
    originalBankLabel: 'Virement Web Sylvain Miserenne Courses G Courses Gard 22/09/2018'
  };
  var scoreResult = scoreMatching(newTr, existingTr); // Even if both labels and originalBankLabels are different, these
  // transactions are very similar and when scored within the same day, they should be matched

  expect(scoreResult.points).toBeGreaterThan(0);
});
it('should work without original bank label', function () {
  var newTr = {
    amount: -85,
    date: '2018-09-22T12:00:00.000Z',
    label: 'Web Sylvain Miserenne G',
    originalBankLabel: 'Virement Web Sylvain Miserenne Courses G Courses Gard 24/09/2018'
  };
  var existingTr = {
    amount: -85,
    date: '2018-09-22T00:00:00+02:00',
    label: 'Web Sylvain Miserenne G',
    linxoId: '1209279242'
  };
  var scoreResult = scoreMatching(newTr, existingTr);
  expect(scoreResult.points).toBeGreaterThan(0);
});