"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var labelSlugs = require('./label-slugs');

var institutionLabelsCompiled = Object.entries(labelSlugs).map(function (_ref) {
  var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
      ilabelRx = _ref2[0],
      slug = _ref2[1];

  if (ilabelRx[0] === '/' && ilabelRx[ilabelRx.length - 1] === '/') {
    return [new RegExp(ilabelRx.substr(1, ilabelRx.length - 2), 'i'), slug];
  } else {
    return [ilabelRx, slug];
  }
});

var getSlugFromInstitutionLabel = function getSlugFromInstitutionLabel(institutionLabel) {
  if (!institutionLabel) {
    return;
  }

  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = institutionLabelsCompiled[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var _step$value = (0, _slicedToArray2.default)(_step.value, 2),
          rx = _step$value[0],
          slug = _step$value[1];

      if (rx instanceof RegExp) {
        var match = institutionLabel.match(rx);

        if (match) {
          return slug;
        }
      } else if (rx.toLowerCase() === institutionLabel.toLowerCase()) {
        return slug;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return != null) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
};

module.exports = {
  getSlugFromInstitutionLabel: getSlugFromInstitutionLabel
};