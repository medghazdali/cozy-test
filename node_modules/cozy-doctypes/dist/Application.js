"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var Document = require('./Document');

var APP_DOCTYPE = 'io.cozy.apps';
var STORE_SLUG = 'store';

var Application =
/*#__PURE__*/
function (_Document) {
  (0, _inherits2.default)(Application, _Document);

  function Application() {
    (0, _classCallCheck2.default)(this, Application);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Application).apply(this, arguments));
  }

  (0, _createClass2.default)(Application, null, [{
    key: "getStoreInstallationURL",

    /**
     * Return Store URL where an app/konnector can be installed / updated
     * @param  {Array}  [appData=[]]   Apps data, as returned by endpoint /apps/ or
     * /konnectors/
     * @param  {Object} [app={}] AppObject
     * @return {String}                URL as string
     */
    value: function getStoreInstallationURL() {
      var appData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var app = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (!app.slug) {
        throw new Error('Expected app / konnector with the defined slug');
      }

      var storeApp = this.isInstalled(appData, {
        slug: STORE_SLUG
      });
      if (!storeApp) return null;
      var storeUrl = storeApp.links && storeApp.links.related;
      if (!storeUrl) return null;
      return "".concat(storeUrl, "#/discover/").concat(app.slug, "/install");
    }
    /**
     *
     * @param {Array} apps Array of apps returned by /apps /konnectors
     * @param {Object} wantedApp io.cozy.app with at least a slug
     * @return {Object} The io.cozy.app is installed or undefined if not
     */

  }, {
    key: "isInstalled",
    value: function isInstalled() {
      var apps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var wantedApp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return apps.find(function (app) {
        return app.attributes && app.attributes.slug === wantedApp.slug;
      });
    }
    /**
     *
     * @param {Object} app io.cozy.app object
     * @return {String} url to the app
     */

  }, {
    key: "getUrl",
    value: function getUrl(app) {
      return app.links && app.links.related;
    }
  }]);
  return Application;
}(Document);

Application.schema = {
  doctype: APP_DOCTYPE,
  attributes: {}
};
Application.doctype = APP_DOCTYPE;
module.exports = Application;